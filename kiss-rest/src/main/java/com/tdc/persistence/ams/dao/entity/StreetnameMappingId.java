package com.tdc.persistence.ams.dao.entity;

// Generated 09-04-2015 18:59:20 by Hibernate Tools 4.0.0

import javax.persistence.Column;
import javax.persistence.Embeddable;

/**
 * StreetnameMappingId generated by hbm2java
 */
@Embeddable
public class StreetnameMappingId implements java.io.Serializable {

	private short municipalitycode;
	private short streetcode;
	private String fromValue;
	private String toValue;

	public StreetnameMappingId() {
	}

	public StreetnameMappingId(short municipalitycode, short streetcode,
			String fromValue, String toValue) {
		this.municipalitycode = municipalitycode;
		this.streetcode = streetcode;
		this.fromValue = fromValue;
		this.toValue = toValue;
	}

	@Column(name = "MUNICIPALITYCODE", nullable = false, precision = 3, scale = 0)
	public short getMunicipalitycode() {
		return this.municipalitycode;
	}

	public void setMunicipalitycode(short municipalitycode) {
		this.municipalitycode = municipalitycode;
	}

	@Column(name = "STREETCODE", nullable = false, precision = 4, scale = 0)
	public short getStreetcode() {
		return this.streetcode;
	}

	public void setStreetcode(short streetcode) {
		this.streetcode = streetcode;
	}

	@Column(name = "FROM_VALUE", nullable = false, length = 20)
	public String getFromValue() {
		return this.fromValue;
	}

	public void setFromValue(String fromValue) {
		this.fromValue = fromValue;
	}

	@Column(name = "TO_VALUE", nullable = false, length = 40)
	public String getToValue() {
		return this.toValue;
	}

	public void setToValue(String toValue) {
		this.toValue = toValue;
	}

	public boolean equals(Object other) {
		if ((this == other))
			return true;
		if ((other == null))
			return false;
		if (!(other instanceof StreetnameMappingId))
			return false;
		StreetnameMappingId castOther = (StreetnameMappingId) other;

		return (this.getMunicipalitycode() == castOther.getMunicipalitycode())
				&& (this.getStreetcode() == castOther.getStreetcode())
				&& ((this.getFromValue() == castOther.getFromValue()) || (this
						.getFromValue() != null
						&& castOther.getFromValue() != null && this
						.getFromValue().equals(castOther.getFromValue())))
				&& ((this.getToValue() == castOther.getToValue()) || (this
						.getToValue() != null && castOther.getToValue() != null && this
						.getToValue().equals(castOther.getToValue())));
	}

	public int hashCode() {
		int result = 17;

		result = 37 * result + this.getMunicipalitycode();
		result = 37 * result + this.getStreetcode();
		result = 37 * result
				+ (getFromValue() == null ? 0 : this.getFromValue().hashCode());
		result = 37 * result
				+ (getToValue() == null ? 0 : this.getToValue().hashCode());
		return result;
	}

}
