package com.tdc.persistence.ams.dao.entity;

// Generated 09-04-2015 18:59:20 by Hibernate Tools 4.0.0

import java.math.BigDecimal;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * ZapMunicipalities generated by hbm2java
 */
@Entity
@Table(name = "ZAP_MUNICIPALITIES", schema = "AMS")
public class ZapMunicipalities implements java.io.Serializable {

	private BigDecimal munid;
	private ZapRegions zapRegions;
	private String munname;
	private Set<ZapAddressPoints> zapAddressPointses = new HashSet<ZapAddressPoints>(
			0);

	public ZapMunicipalities() {
	}

	public ZapMunicipalities(BigDecimal munid, String munname) {
		this.munid = munid;
		this.munname = munname;
	}

	public ZapMunicipalities(BigDecimal munid, ZapRegions zapRegions,
			String munname, Set<ZapAddressPoints> zapAddressPointses) {
		this.munid = munid;
		this.zapRegions = zapRegions;
		this.munname = munname;
		this.zapAddressPointses = zapAddressPointses;
	}

	@Id
	@Column(name = "MUNID", unique = true, nullable = false, precision = 22, scale = 0)
	public BigDecimal getMunid() {
		return this.munid;
	}

	public void setMunid(BigDecimal munid) {
		this.munid = munid;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "REGIONID")
	public ZapRegions getZapRegions() {
		return this.zapRegions;
	}

	public void setZapRegions(ZapRegions zapRegions) {
		this.zapRegions = zapRegions;
	}

	@Column(name = "MUNNAME", nullable = false, length = 50)
	public String getMunname() {
		return this.munname;
	}

	public void setMunname(String munname) {
		this.munname = munname;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "zapMunicipalities")
	public Set<ZapAddressPoints> getZapAddressPointses() {
		return this.zapAddressPointses;
	}

	public void setZapAddressPointses(Set<ZapAddressPoints> zapAddressPointses) {
		this.zapAddressPointses = zapAddressPointses;
	}

}
