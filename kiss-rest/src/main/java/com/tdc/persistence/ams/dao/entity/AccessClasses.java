package com.tdc.persistence.ams.dao.entity;

// Generated 09-04-2015 18:59:20 by Hibernate Tools 4.0.0

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * AccessClasses generated by hbm2java
 */
@Entity
@Table(name = "ACCESS_CLASSES", schema = "AMS")
public class AccessClasses implements java.io.Serializable {

	private boolean accessClass;
	private String description;
	private Set<Streets> streetsesForAccessClass = new HashSet<Streets>(0);
	private Set<Addresses> addressesesForUserAccessClass = new HashSet<Addresses>(
			0);
	private Set<Streets> streetsesForUserAccessClass = new HashSet<Streets>(0);
	private Set<Addresses> addressesesForAccessClass = new HashSet<Addresses>(0);
	private Set<StreetsSearch> streetsSearches = new HashSet<StreetsSearch>(0);
	private Set<Municipalities> municipalitieses = new HashSet<Municipalities>(
			0);
	private Set<Postaldistricts> postaldistrictses = new HashSet<Postaldistricts>(
			0);

	public AccessClasses() {
	}

	public AccessClasses(boolean accessClass, String description) {
		this.accessClass = accessClass;
		this.description = description;
	}

	public AccessClasses(boolean accessClass, String description,
			Set<Streets> streetsesForAccessClass,
			Set<Addresses> addressesesForUserAccessClass,
			Set<Streets> streetsesForUserAccessClass,
			Set<Addresses> addressesesForAccessClass,
			Set<StreetsSearch> streetsSearches,
			Set<Municipalities> municipalitieses,
			Set<Postaldistricts> postaldistrictses) {
		this.accessClass = accessClass;
		this.description = description;
		this.streetsesForAccessClass = streetsesForAccessClass;
		this.addressesesForUserAccessClass = addressesesForUserAccessClass;
		this.streetsesForUserAccessClass = streetsesForUserAccessClass;
		this.addressesesForAccessClass = addressesesForAccessClass;
		this.streetsSearches = streetsSearches;
		this.municipalitieses = municipalitieses;
		this.postaldistrictses = postaldistrictses;
	}

	@Id
	@Column(name = "ACCESS_CLASS", unique = true, nullable = false, precision = 1, scale = 0)
	public boolean isAccessClass() {
		return this.accessClass;
	}

	public void setAccessClass(boolean accessClass) {
		this.accessClass = accessClass;
	}

	@Column(name = "DESCRIPTION", nullable = false, length = 30)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "accessClassesByAccessClass")
	public Set<Streets> getStreetsesForAccessClass() {
		return this.streetsesForAccessClass;
	}

	public void setStreetsesForAccessClass(Set<Streets> streetsesForAccessClass) {
		this.streetsesForAccessClass = streetsesForAccessClass;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "accessClassesByUserAccessClass")
	public Set<Addresses> getAddressesesForUserAccessClass() {
		return this.addressesesForUserAccessClass;
	}

	public void setAddressesesForUserAccessClass(
			Set<Addresses> addressesesForUserAccessClass) {
		this.addressesesForUserAccessClass = addressesesForUserAccessClass;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "accessClassesByUserAccessClass")
	public Set<Streets> getStreetsesForUserAccessClass() {
		return this.streetsesForUserAccessClass;
	}

	public void setStreetsesForUserAccessClass(
			Set<Streets> streetsesForUserAccessClass) {
		this.streetsesForUserAccessClass = streetsesForUserAccessClass;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "accessClassesByAccessClass")
	public Set<Addresses> getAddressesesForAccessClass() {
		return this.addressesesForAccessClass;
	}

	public void setAddressesesForAccessClass(
			Set<Addresses> addressesesForAccessClass) {
		this.addressesesForAccessClass = addressesesForAccessClass;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "accessClasses")
	public Set<StreetsSearch> getStreetsSearches() {
		return this.streetsSearches;
	}

	public void setStreetsSearches(Set<StreetsSearch> streetsSearches) {
		this.streetsSearches = streetsSearches;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "accessClasses")
	public Set<Municipalities> getMunicipalitieses() {
		return this.municipalitieses;
	}

	public void setMunicipalitieses(Set<Municipalities> municipalitieses) {
		this.municipalitieses = municipalitieses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "accessClasses")
	public Set<Postaldistricts> getPostaldistrictses() {
		return this.postaldistrictses;
	}

	public void setPostaldistrictses(Set<Postaldistricts> postaldistrictses) {
		this.postaldistrictses = postaldistrictses;
	}

}
