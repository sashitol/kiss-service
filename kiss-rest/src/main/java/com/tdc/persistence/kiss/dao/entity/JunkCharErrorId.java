package com.tdc.persistence.kiss.dao.entity;

// Generated 31-03-2015 11:56:29 by Hibernate Tools 4.0.0

import javax.persistence.Column;
import javax.persistence.Embeddable;

/**
 * JunkCharErrorId generated by hbm2java
 */
@Embeddable
public class JunkCharErrorId implements java.io.Serializable {

	private Long id;
	private Long jctId;
	private String errorText;

	public JunkCharErrorId() {
	}

	public JunkCharErrorId(Long id, Long jctId, String errorText) {
		this.id = id;
		this.jctId = jctId;
		this.errorText = errorText;
	}

	@Column(name = "ID", precision = 10, scale = 0)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@Column(name = "JCT_ID", precision = 10, scale = 0)
	public Long getJctId() {
		return this.jctId;
	}

	public void setJctId(Long jctId) {
		this.jctId = jctId;
	}

	@Column(name = "ERROR_TEXT", length = 2000)
	public String getErrorText() {
		return this.errorText;
	}

	public void setErrorText(String errorText) {
		this.errorText = errorText;
	}

	public boolean equals(Object other) {
		if ((this == other))
			return true;
		if ((other == null))
			return false;
		if (!(other instanceof JunkCharErrorId))
			return false;
		JunkCharErrorId castOther = (JunkCharErrorId) other;

		return ((this.getId() == castOther.getId()) || (this.getId() != null
				&& castOther.getId() != null && this.getId().equals(
				castOther.getId())))
				&& ((this.getJctId() == castOther.getJctId()) || (this
						.getJctId() != null && castOther.getJctId() != null && this
						.getJctId().equals(castOther.getJctId())))
				&& ((this.getErrorText() == castOther.getErrorText()) || (this
						.getErrorText() != null
						&& castOther.getErrorText() != null && this
						.getErrorText().equals(castOther.getErrorText())));
	}

	public int hashCode() {
		int result = 17;

		result = 37 * result + (getId() == null ? 0 : this.getId().hashCode());
		result = 37 * result
				+ (getJctId() == null ? 0 : this.getJctId().hashCode());
		result = 37 * result
				+ (getErrorText() == null ? 0 : this.getErrorText().hashCode());
		return result;
	}

}
