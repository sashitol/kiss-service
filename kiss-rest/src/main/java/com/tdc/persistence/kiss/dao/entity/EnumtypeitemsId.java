package com.tdc.persistence.kiss.dao.entity;

// Generated 31-03-2015 11:56:29 by Hibernate Tools 4.0.0

import javax.persistence.Column;
import javax.persistence.Embeddable;

/**
 * EnumtypeitemsId generated by hbm2java
 */
@Embeddable
public class EnumtypeitemsId implements java.io.Serializable {

	private Long id;
	private String typeid;
	private Long code;
	private String title;
	private String description;
	private Long priority;
	private Long active;

	public EnumtypeitemsId() {
	}

	public EnumtypeitemsId(Long id, String typeid, Long code, String title,
			String description, Long priority, Long active) {
		this.id = id;
		this.typeid = typeid;
		this.code = code;
		this.title = title;
		this.description = description;
		this.priority = priority;
		this.active = active;
	}

	@Column(name = "ID", precision = 10, scale = 0)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@Column(name = "TYPEID", length = 40)
	public String getTypeid() {
		return this.typeid;
	}

	public void setTypeid(String typeid) {
		this.typeid = typeid;
	}

	@Column(name = "CODE", precision = 10, scale = 0)
	public Long getCode() {
		return this.code;
	}

	public void setCode(Long code) {
		this.code = code;
	}

	@Column(name = "TITLE", length = 40)
	public String getTitle() {
		return this.title;
	}

	public void setTitle(String title) {
		this.title = title;
	}

	@Column(name = "DESCRIPTION")
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "PRIORITY", precision = 10, scale = 0)
	public Long getPriority() {
		return this.priority;
	}

	public void setPriority(Long priority) {
		this.priority = priority;
	}

	@Column(name = "ACTIVE", precision = 10, scale = 0)
	public Long getActive() {
		return this.active;
	}

	public void setActive(Long active) {
		this.active = active;
	}

	public boolean equals(Object other) {
		if ((this == other))
			return true;
		if ((other == null))
			return false;
		if (!(other instanceof EnumtypeitemsId))
			return false;
		EnumtypeitemsId castOther = (EnumtypeitemsId) other;

		return ((this.getId() == castOther.getId()) || (this.getId() != null
				&& castOther.getId() != null && this.getId().equals(
				castOther.getId())))
				&& ((this.getTypeid() == castOther.getTypeid()) || (this
						.getTypeid() != null && castOther.getTypeid() != null && this
						.getTypeid().equals(castOther.getTypeid())))
				&& ((this.getCode() == castOther.getCode()) || (this.getCode() != null
						&& castOther.getCode() != null && this.getCode()
						.equals(castOther.getCode())))
				&& ((this.getTitle() == castOther.getTitle()) || (this
						.getTitle() != null && castOther.getTitle() != null && this
						.getTitle().equals(castOther.getTitle())))
				&& ((this.getDescription() == castOther.getDescription()) || (this
						.getDescription() != null
						&& castOther.getDescription() != null && this
						.getDescription().equals(castOther.getDescription())))
				&& ((this.getPriority() == castOther.getPriority()) || (this
						.getPriority() != null
						&& castOther.getPriority() != null && this
						.getPriority().equals(castOther.getPriority())))
				&& ((this.getActive() == castOther.getActive()) || (this
						.getActive() != null && castOther.getActive() != null && this
						.getActive().equals(castOther.getActive())));
	}

	public int hashCode() {
		int result = 17;

		result = 37 * result + (getId() == null ? 0 : this.getId().hashCode());
		result = 37 * result
				+ (getTypeid() == null ? 0 : this.getTypeid().hashCode());
		result = 37 * result
				+ (getCode() == null ? 0 : this.getCode().hashCode());
		result = 37 * result
				+ (getTitle() == null ? 0 : this.getTitle().hashCode());
		result = 37
				* result
				+ (getDescription() == null ? 0 : this.getDescription()
						.hashCode());
		result = 37 * result
				+ (getPriority() == null ? 0 : this.getPriority().hashCode());
		result = 37 * result
				+ (getActive() == null ? 0 : this.getActive().hashCode());
		return result;
	}

}
